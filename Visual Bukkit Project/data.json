{
  "plugin.dependencies": "",
  "plugin.load-before": "",
  "plugin.version": "1.0.4",
  "debug-build-mode": false,
  "open-tab": 1,
  "plugin-components": [
    {
      "children": [
        {
          "=": "stat-comment",
          "parameters": ["Plugin made using Visual Bukkit! Plugin available at: https://github.com/SirDank/dank.chatroom-plugin"]
        },
        {
          "=": "stat-connect-bstats",
          "parameters": [{
            "=": "expr-number",
            "parameters": ["19689"]
          }]
        },
        {
          "=": "stat-set-global-variable",
          "parameters": [
            "printed_msg_id",
            {
              "=": "expr-number",
              "parameters": ["0"]
            }
          ]
        },
        {
          "=": "stat-set-global-variable",
          "parameters": [
            "running",
            {
              "=": "expr-boolean",
              "parameters": ["false"]
            }
          ]
        },
        {
          "children": [{
            "children": [{
              "=": "stat-execute-procedure",
              "parameters": [
                "chatroom_enabler",
                {"=": "expr-new-list"}
              ]
            }],
            "=": "stat-if-statement",
            "parameters": [
              {
                "=": "expr-is-equal",
                "parameters": [
                  {
                    "=": "expr-global-variable",
                    "parameters": ["running"]
                  },
                  {
                    "=": "expr-boolean",
                    "parameters": ["false"]
                  }
                ]
              },
              "normal"
            ]
          }],
          "=": "stat-schedule-task",
          "parameters": [
            "async",
            "repeat",
            {
              "=": "expr-number",
              "parameters": ["18000"]
            }
          ]
        },
        {
          "=": "org.bukkit.command.CommandSender#sendMessage(java.lang.String)",
          "parameters": [
            {"=": "org.bukkit.Bukkit#getConsoleSender()"},
            {
              "=": "expr-colored-string",
              "parameters": [{
                "=": "expr-raw-string",
                "parameters": ["\\n\\n\\n&l&c     888                   888                                             \\n&l&c     888                   888           s i r &f.&c d a n k &f'&c s               \\n&l&c     888                   888                                             \\n&l&c .d88888  8888b.  88888b.  888  888 888  888  888  8888b.  888d888 .d88b.  \\n&l&cd88\\\" 888     \\\"88b 888 \\\"88b 888 .88P 888  888  888     \\\"88b 888P\\\"  d8P  Y8b \\n&l&c888  888 .d888888 888  888 888888K  888  888  888 .d888888 888    88888888 \\n&l&cY88b 888 888  888 888  888 888 \\\"88b Y88b 888 d88P 888  888 888    Y8b.     \\n&l&c \\\"Y88888 \\\"Y888888 888  888 888  888  \\\"Y8888888P\\\"  \\\"Y888888 888     \\\"Y8888  \\n\\n \\n "]
              }]
            }
          ]
        }
      ],
      "=": "comp-plugin-enable"
    },
    {
      "children": [
        {
          "=": "stat-set-global-variable",
          "parameters": [
            "running",
            {
              "=": "expr-boolean",
              "parameters": ["false"]
            }
          ]
        },
        {
          "=": "stat-log-info",
          "parameters": [{
            "=": "expr-string",
            "parameters": ["Goodbye!"]
          }]
        }
      ],
      "=": "comp-plugin-disable"
    },
    {
      "children": [
        {
          "children": [
            {
              "=": "stat-java-code",
              "parameters": ["String os = System.getProperty(\"os.name\").toLowerCase();String command = (os.contains(\"win\")) ? \"wmic csproduct get uuid\" : \"sudo dmidecode -s system-uuid\";Process process = Runtime.getRuntime().exec(command);BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));StringBuilder uuidBuilder = new StringBuilder();String line;while ((line = reader.readLine()) != null) {    uuidBuilder.append(line.trim());}"]
            },
            {
              "=": "stat-set-global-variable",
              "parameters": [
                "hwid",
                {
                  "=": "expr-java-code",
                  "parameters": ["uuidBuilder.toString().replace(\"UUID\", \"\").replace(\":\", \"\").trim()"]
                }
              ]
            },
            {
              "=": "stat-log-info",
              "parameters": [{
                "=": "expr-combine-strings",
                "parameters": [
                  {
                    "=": "expr-string",
                    "parameters": ["HWID: "]
                  },
                  {
                    "=": "expr-global-variable",
                    "parameters": ["hwid"]
                  }
                ]
              }]
            },
            {
              "=": "stat-set-global-variable",
              "parameters": [
                "running",
                {
                  "=": "expr-boolean",
                  "parameters": ["true"]
                }
              ]
            }
          ],
          "=": "stat-attempt-execution"
        },
        {
          "children": [
            {
              "=": "stat-log-error",
              "parameters": [{
                "=": "expr-string",
                "parameters": ["Failed to get HWID!"]
              }]
            },
            {
              "=": "stat-set-global-variable",
              "parameters": [
                "running",
                {
                  "=": "expr-boolean",
                  "parameters": ["false"]
                }
              ]
            }
          ],
          "=": "stat-handle-execution-error"
        }
      ],
      "=": "comp-procedure",
      "parameters": ["get_hwid"]
    },
    {
      "children": [{
        "=": "stat-set-local-variable",
        "parameters": [
          "response",
          {
            "=": "expr-function-value",
            "parameters": [
              "send_request",
              {
                "size": 3,
                "=": "expr-new-list",
                "parameters": [
                  {
                    "=": "expr-string",
                    "parameters": ["https://dank-site.onrender.com/chatroom-users"]
                  },
                  {
                    "=": "expr-string",
                    "parameters": ["POST"]
                  },
                  {
                    "=": "expr-global-variable",
                    "parameters": ["compressed_hwid"]
                  }
                ]
              }
            ]
          }
        ]
      }],
      "=": "comp-procedure",
      "parameters": ["chatroom_validator"]
    },
    {
      "children": [{
        "=": "stat-java-code",
        "parameters": ["try {byte[] inputBytes = ((String) functionArgs.get(0)).getBytes();java.util.zip.Deflater deflater = new java.util.zip.Deflater();deflater.setInput(inputBytes);deflater.finish();ByteArrayOutputStream outputStream = new ByteArrayOutputStream(inputBytes.length);byte[] buffer = new byte[1024];while (!deflater.finished()) {    int compressedLength = deflater.deflate(buffer);    outputStream.write(buffer, 0, compressedLength);}deflater.end();return outputStream.toByteArray();} catch (Exception e) {    e.printStackTrace();}"]
      }],
      "=": "comp-function",
      "parameters": ["compress"]
    },
    {
      "children": [{
        "=": "stat-java-code",
        "parameters": ["try {    byte[] jsonData = (byte[]) functionArgs.get(2);    String urlString = (String) functionArgs.get(0);        java.net.HttpURLConnection connection = (java.net.HttpURLConnection) new java.net.URL(urlString).openConnection();    connection.setRequestMethod(\"GET\");    connection.setRequestProperty(\"User-Agent\", \"dank.plugin\");    connection.setRequestProperty(\"Content-Encoding\", \"deflate\");    connection.setRequestProperty(\"Content-Type\", \"application/json\");    connection.setDoOutput(true);        OutputStream os = connection.getOutputStream();    os.write(jsonData);    os.flush();    os.close();        InputStream inputStream = connection.getInputStream();    byte[] responseBytes = inputStream.readAllBytes();    String responseMessage = connection.getResponseMessage();        if (!\"OK\".equals(responseMessage)) {        System.out.println(\"Response: \" + responseMessage);    }        return responseBytes;} catch (Exception e) {    e.printStackTrace();}"]
      }],
      "=": "comp-function",
      "parameters": ["send_request"]
    },
    {
      "children": [{
        "children": [
          {
            "children": [{
              "=": "stat-execute-procedure",
              "parameters": [
                "chatroom_input",
                {
                  "size": 1,
                  "=": "expr-new-list",
                  "parameters": [{
                    "size": 2,
                    "=": "expr-combine-strings",
                    "parameters": [
                      {
                        "=": "expr-string",
                        "parameters": ["["]
                      },
                      {
                        "=": "org.bukkit.command.CommandSender#getName()",
                        "parameters": [{"=": "org.bukkit.event.player.AsyncPlayerChatEvent#getPlayer()"}]
                      },
                      {
                        "=": "expr-string",
                        "parameters": ["] > "]
                      },
                      {"=": "org.bukkit.event.player.AsyncPlayerChatEvent#getMessage()"}
                    ]
                  }]
                }
              ]
            }],
            "=": "stat-attempt-execution"
          },
          {
            "children": [
              {
                "=": "stat-log-error",
                "parameters": [{
                  "=": "expr-string",
                  "parameters": ["Input Failed!"]
                }]
              },
              {
                "=": "stat-set-global-variable",
                "parameters": [
                  "running",
                  {
                    "=": "expr-boolean",
                    "parameters": ["false"]
                  }
                ]
              }
            ],
            "=": "stat-handle-execution-error"
          }
        ],
        "=": "stat-if-statement",
        "parameters": [
          {
            "=": "expr-is-equal",
            "parameters": [
              {
                "=": "expr-global-variable",
                "parameters": ["running"]
              },
              {
                "=": "expr-boolean",
                "parameters": ["true"]
              }
            ]
          },
          "normal"
        ]
      }],
      "=": "org.bukkit.event.player.AsyncPlayerChatEvent",
      "parameters": ["NORMAL"]
    },
    {
      "children": [{
        "=": "stat-set-local-variable",
        "parameters": [
          "response",
          {
            "=": "expr-function-value",
            "parameters": [
              "send_request",
              {
                "size": 3,
                "=": "expr-new-list",
                "parameters": [
                  {
                    "=": "expr-string",
                    "parameters": ["https://dank-site.onrender.com/chatroom"]
                  },
                  {
                    "=": "expr-string",
                    "parameters": ["POST"]
                  },
                  {
                    "=": "expr-function-value",
                    "parameters": [
                      "compress",
                      {
                        "size": 1,
                        "=": "expr-new-list",
                        "parameters": [{
                          "size": 3,
                          "=": "expr-combine-strings",
                          "parameters": [
                            {
                              "=": "expr-string",
                              "parameters": ["{\"uuid\":\""]
                            },
                            {
                              "=": "expr-global-variable",
                              "parameters": ["hwid"]
                            },
                            {
                              "=": "expr-string",
                              "parameters": ["\",\"msg\":\""]
                            },
                            {
                              "=": "java.util.List#get(int)",
                              "parameters": [
                                {"=": "expr-procedure-arguments"},
                                {
                                  "=": "expr-number",
                                  "parameters": ["0"]
                                }
                              ]
                            },
                            {
                              "=": "expr-string",
                              "parameters": ["\"}"]
                            }
                          ]
                        }]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }],
      "=": "comp-procedure",
      "parameters": ["chatroom_input"]
    },
    {
      "children": [
        {
          "=": "stat-comment",
          "parameters": ["keep response_mapped!"]
        },
        {
          "=": "stat-set-local-variable",
          "parameters": [
            "response_mapped",
            {
              "=": "expr-function-value",
              "parameters": [
                "mapper",
                {
                  "size": 1,
                  "=": "expr-new-list",
                  "parameters": [{
                    "=": "expr-function-value",
                    "parameters": [
                      "decompress",
                      {
                        "size": 1,
                        "=": "expr-new-list",
                        "parameters": [{
                          "=": "expr-function-value",
                          "parameters": [
                            "send_request",
                            {
                              "size": 3,
                              "=": "expr-new-list",
                              "parameters": [
                                {
                                  "=": "expr-string",
                                  "parameters": ["https://dank-site.onrender.com/chatroom"]
                                },
                                {
                                  "=": "expr-string",
                                  "parameters": ["GET"]
                                },
                                {
                                  "=": "expr-function-value",
                                  "parameters": [
                                    "compress",
                                    {
                                      "size": 1,
                                      "=": "expr-new-list",
                                      "parameters": [{
                                        "size": 3,
                                        "=": "expr-combine-strings",
                                        "parameters": [
                                          {
                                            "=": "expr-string",
                                            "parameters": ["{\"uuid\":\""]
                                          },
                                          {
                                            "=": "expr-global-variable",
                                            "parameters": ["hwid"]
                                          },
                                          {
                                            "=": "expr-string",
                                            "parameters": ["\",\"msg_id\":\""]
                                          },
                                          {
                                            "=": "expr-global-variable",
                                            "parameters": ["printed_msg_id"]
                                          },
                                          {
                                            "=": "expr-string",
                                            "parameters": ["\"}"]
                                          }
                                        ]
                                      }]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }]
                      }
                    ]
                  }]
                }
              ]
            }
          ]
        },
        {
          "=": "stat-comment",
          "parameters": ["Use only REPLACE below!"]
        },
        {
          "=": "stat-set-local-variable",
          "parameters": [
            "chat",
            {
              "=": "java.lang.String#split(java.lang.String,int)",
              "parameters": [
                {
                  "=": "java.lang.String#replace(java.lang.CharSequence,java.lang.CharSequence)",
                  "parameters": [
                    {
                      "=": "java.lang.String#replace(java.lang.CharSequence,java.lang.CharSequence)",
                      "parameters": [
                        {
                          "=": "java.lang.String#replace(java.lang.CharSequence,java.lang.CharSequence)",
                          "parameters": [
                            {
                              "=": "java.lang.String#replace(java.lang.CharSequence,java.lang.CharSequence)",
                              "parameters": [
                                {
                                  "=": "java.util.HashMap#get(java.lang.Object)",
                                  "parameters": [
                                    {
                                      "=": "expr-local-variable",
                                      "parameters": ["response_mapped"]
                                    },
                                    {
                                      "=": "expr-string",
                                      "parameters": ["chat"]
                                    }
                                  ]
                                },
                                {
                                  "=": "expr-string",
                                  "parameters": ["[SirDank]"]
                                },
                                {
                                  "=": "expr-string",
                                  "parameters": ["[&4SirDank]"]
                                }
                              ]
                            },
                            {
                              "=": "expr-string",
                              "parameters": ["["]
                            },
                            {
                              "=": "expr-string",
                              "parameters": ["&6[&c"]
                            }
                          ]
                        },
                        {
                          "=": "expr-string",
                          "parameters": ["]"]
                        },
                        {
                          "=": "expr-string",
                          "parameters": ["&6]&b"]
                        }
                      ]
                    },
                    {
                      "=": "expr-string",
                      "parameters": [">"]
                    },
                    {
                      "=": "expr-string",
                      "parameters": ["&6➤&b"]
                    }
                  ]
                },
                {
                  "=": "expr-raw-string",
                  "parameters": ["\\\\\\\\n"]
                },
                {
                  "=": "expr-number",
                  "parameters": ["25"]
                }
              ]
            }
          ]
        },
        {
          "children": [
            {
              "children": [{
                "=": "org.bukkit.Bukkit#broadcastMessage(java.lang.String)",
                "parameters": [{"=": "expr-loop-value"}]
              }],
              "=": "stat-list-loop",
              "parameters": [{
                "=": "expr-local-variable",
                "parameters": ["chat"]
              }]
            },
            {
              "=": "stat-set-global-variable",
              "parameters": [
                "printed_msg_id",
                {
                  "=": "java.util.HashMap#get(java.lang.Object)",
                  "parameters": [
                    {
                      "=": "expr-local-variable",
                      "parameters": ["response_mapped"]
                    },
                    {
                      "=": "expr-string",
                      "parameters": ["msg_id"]
                    }
                  ]
                }
              ]
            }
          ],
          "=": "stat-if-statement",
          "parameters": [
            {
              "=": "expr-is-equal",
              "parameters": [
                {
                  "=": "expr-local-variable",
                  "parameters": ["chat"]
                },
                {
                  "size": 1,
                  "=": "expr-new-list",
                  "parameters": [{
                    "=": "expr-string",
                    "parameters": [""]
                  }]
                }
              ]
            },
            "negate condition"
          ]
        }
      ],
      "=": "comp-procedure",
      "parameters": ["chatroom_grabber_and_output"]
    },
    {
      "children": [
        {
          "=": "stat-execute-procedure",
          "parameters": [
            "get_hwid",
            {"=": "expr-new-list"}
          ]
        },
        {
          "children": [
            {
              "=": "stat-set-global-variable",
              "parameters": [
                "compressed_hwid",
                {
                  "=": "expr-function-value",
                  "parameters": [
                    "compress",
                    {
                      "size": 1,
                      "=": "expr-new-list",
                      "parameters": [{
                        "size": 1,
                        "=": "expr-combine-strings",
                        "parameters": [
                          {
                            "=": "expr-string",
                            "parameters": ["{\"uuid\":\""]
                          },
                          {
                            "=": "expr-global-variable",
                            "parameters": ["hwid"]
                          },
                          {
                            "=": "expr-string",
                            "parameters": ["\"}"]
                          }
                        ]
                      }]
                    }
                  ]
                }
              ]
            },
            {
              "=": "stat-execute-procedure",
              "parameters": [
                "chatroom_login",
                {"=": "expr-new-list"}
              ]
            },
            {
              "=": "stat-comment",
              "parameters": ["Delay is in ticks! (20t = 1s)"]
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [{
                        "=": "stat-execute-procedure",
                        "parameters": [
                          "chatroom_validator",
                          {"=": "expr-new-list"}
                        ]
                      }],
                      "=": "stat-attempt-execution"
                    },
                    {
                      "children": [
                        {
                          "=": "stat-log-error",
                          "parameters": [{
                            "=": "expr-string",
                            "parameters": ["Failed to validate!"]
                          }]
                        },
                        {
                          "=": "stat-set-global-variable",
                          "parameters": [
                            "running",
                            {
                              "=": "expr-boolean",
                              "parameters": ["false"]
                            }
                          ]
                        },
                        {"=": "stat-cancel-scheduled-task"}
                      ],
                      "=": "stat-handle-execution-error"
                    }
                  ],
                  "=": "stat-if-statement",
                  "parameters": [
                    {
                      "=": "expr-is-equal",
                      "parameters": [
                        {
                          "=": "expr-global-variable",
                          "parameters": ["running"]
                        },
                        {
                          "=": "expr-boolean",
                          "parameters": ["true"]
                        }
                      ]
                    },
                    "normal"
                  ]
                },
                {
                  "children": [{"=": "stat-cancel-scheduled-task"}],
                  "=": "stat-else-statement"
                }
              ],
              "=": "stat-schedule-task",
              "parameters": [
                "async",
                "repeat",
                {
                  "=": "expr-number",
                  "parameters": ["12000"]
                }
              ]
            },
            {
              "=": "stat-comment",
              "parameters": ["Delay is in ticks! (20t = 1s)"]
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [{
                        "=": "stat-execute-procedure",
                        "parameters": [
                          "chatroom_grabber_and_output",
                          {"=": "expr-new-list"}
                        ]
                      }],
                      "=": "stat-attempt-execution"
                    },
                    {
                      "children": [
                        {
                          "=": "stat-log-error",
                          "parameters": [{
                            "=": "expr-string",
                            "parameters": ["Failed to get chat!"]
                          }]
                        },
                        {
                          "=": "stat-set-global-variable",
                          "parameters": [
                            "running",
                            {
                              "=": "expr-boolean",
                              "parameters": ["false"]
                            }
                          ]
                        },
                        {"=": "stat-cancel-scheduled-task"}
                      ],
                      "=": "stat-handle-execution-error"
                    }
                  ],
                  "=": "stat-if-statement",
                  "parameters": [
                    {
                      "=": "expr-is-equal",
                      "parameters": [
                        {
                          "=": "expr-global-variable",
                          "parameters": ["running"]
                        },
                        {
                          "=": "expr-boolean",
                          "parameters": ["true"]
                        }
                      ]
                    },
                    "normal"
                  ]
                },
                {
                  "children": [{"=": "stat-cancel-scheduled-task"}],
                  "=": "stat-else-statement"
                }
              ],
              "=": "stat-schedule-task",
              "parameters": [
                "async",
                "repeat",
                {
                  "=": "expr-number",
                  "parameters": ["100"]
                }
              ]
            }
          ],
          "=": "stat-if-statement",
          "parameters": [
            {
              "=": "expr-is-equal",
              "parameters": [
                {
                  "=": "expr-global-variable",
                  "parameters": ["running"]
                },
                {
                  "=": "expr-boolean",
                  "parameters": ["true"]
                }
              ]
            },
            "normal"
          ]
        }
      ],
      "=": "comp-procedure",
      "parameters": ["chatroom_enabler"]
    },
    {
      "children": [{
        "=": "stat-java-code",
        "parameters": ["java.util.zip.Inflater inflater = new java.util.zip.Inflater();byte[] compressedData = (byte[]) functionArgs.get(0);inflater.setInput(compressedData);byte[] buffer = new byte[1024];StringBuilder result = new StringBuilder();try {    while (!inflater.finished()) {        int decompressedLength = inflater.inflate(buffer);        result.append(new String(buffer, 0, decompressedLength, \"UTF-8\"));    }} catch (UnsupportedEncodingException | java.util.zip.DataFormatException e) {    e.printStackTrace();} finally {    inflater.end();}return result.toString();"]
      }],
      "=": "comp-function",
      "parameters": ["decompress"]
    },
    {
      "children": [{
        "=": "stat-java-code",
        "parameters": ["try {String jsonData = (String) functionArgs.get(0);Map < String, String > responseMap = new HashMap < > ();if (jsonData.startsWith(\"{\") && jsonData.endsWith(\"}\")) {    jsonData = jsonData.substring(1, jsonData.length() - 1);}String[] keyValuePairs = jsonData.split(\", \");for (String pair: keyValuePairs) {    String[] parts = pair.split(\": \", 2);    if (parts.length == 2) {        String key = parts[0].trim().replaceAll(\"\\\"\", \"\");        String value = parts[1].trim().replaceAll(\"\\\"\", \"\");        responseMap.put(key, value);    }}return responseMap;} catch (Exception e) {    e.printStackTrace();}"]
      }],
      "=": "comp-function",
      "parameters": ["mapper"]
    },
    {
      "children": [
        {
          "children": [{
            "=": "org.bukkit.command.CommandSender#sendMessage(java.lang.String)",
            "parameters": [
              {"=": "expr-command-sender"},
              {
                "=": "expr-string",
                "parameters": ["&6[&cdank&6.&cserver&6] ➤ &bYou are already connected&6!"]
              }
            ]
          }],
          "=": "stat-if-statement",
          "parameters": [
            {
              "=": "expr-is-equal",
              "parameters": [
                {
                  "=": "expr-global-variable",
                  "parameters": ["running"]
                },
                {
                  "=": "expr-boolean",
                  "parameters": ["true"]
                }
              ]
            },
            "normal"
          ]
        },
        {
          "children": [
            {
              "=": "stat-execute-procedure",
              "parameters": [
                "chatroom_enabler",
                {"=": "expr-new-list"}
              ]
            },
            {
              "=": "org.bukkit.command.CommandSender#sendMessage(java.lang.String)",
              "parameters": [
                {"=": "expr-command-sender"},
                {
                  "=": "expr-string",
                  "parameters": ["&6[&cdank&6.&cserver&6] ➤ &bTrying to connect&6..."]
                }
              ]
            }
          ],
          "=": "stat-else-statement"
        }
      ],
      "=": "comp-command",
      "parameters": [
        "chatroom-connect",
        "",
        "Connects server to the dank.tool's chatroom!",
        "",
        "",
        ""
      ]
    },
    {
      "children": [
        {
          "children": [
            {
              "=": "stat-set-global-variable",
              "parameters": [
                "running",
                {
                  "=": "expr-boolean",
                  "parameters": ["false"]
                }
              ]
            },
            {
              "=": "org.bukkit.command.CommandSender#sendMessage(java.lang.String)",
              "parameters": [
                {"=": "expr-command-sender"},
                {
                  "=": "expr-string",
                  "parameters": ["&6[&cdank&6.&cserver&6] ➤ &bYou have been disconnected&6!"]
                }
              ]
            }
          ],
          "=": "stat-if-statement",
          "parameters": [
            {
              "=": "expr-is-equal",
              "parameters": [
                {
                  "=": "expr-global-variable",
                  "parameters": ["running"]
                },
                {
                  "=": "expr-boolean",
                  "parameters": ["true"]
                }
              ]
            },
            "normal"
          ]
        },
        {
          "children": [{
            "=": "org.bukkit.command.CommandSender#sendMessage(java.lang.String)",
            "parameters": [
              {"=": "expr-command-sender"},
              {
                "=": "expr-string",
                "parameters": ["&6[&cdank&6.&cserver&6] ➤ &bYou are already disconnected&6!"]
              }
            ]
          }],
          "=": "stat-else-statement"
        }
      ],
      "=": "comp-command",
      "parameters": [
        "chatroom-disconnect",
        "",
        "Disconnects server from the dank.tool's chatroom!",
        "",
        "",
        ""
      ]
    },
    {
      "children": [
        {
          "children": [
            {
              "=": "stat-set-local-variable",
              "parameters": [
                "response",
                {
                  "=": "expr-function-value",
                  "parameters": [
                    "send_request",
                    {
                      "size": 3,
                      "=": "expr-new-list",
                      "parameters": [
                        {
                          "=": "expr-string",
                          "parameters": ["https://dank-site.onrender.com/chatroom-login"]
                        },
                        {
                          "=": "expr-string",
                          "parameters": ["POST"]
                        },
                        {
                          "=": "expr-global-variable",
                          "parameters": ["compressed_hwid"]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "=": "stat-log-info",
              "parameters": [{
                "=": "expr-string",
                "parameters": ["Logged in!"]
              }]
            }
          ],
          "=": "stat-attempt-execution"
        },
        {
          "children": [
            {
              "=": "stat-log-error",
              "parameters": [{
                "=": "expr-string",
                "parameters": ["Failed to login!"]
              }]
            },
            {
              "=": "stat-set-global-variable",
              "parameters": [
                "running",
                {
                  "=": "expr-boolean",
                  "parameters": ["false"]
                }
              ]
            }
          ],
          "=": "stat-handle-execution-error"
        }
      ],
      "=": "comp-procedure",
      "parameters": ["chatroom_login"]
    }
  ],
  "plugin.soft-dependencies": "",
  "plugin.name": "DankChatroom",
  "plugin.prefix": "dank.chatroom",
  "current-plugin-component": 1,
  "extensions": ["bStats"],
  "plugin.author": "SirDank",
  "plugin.description": "Minecraft server integration for the dank.tool's chatroom!",
  "plugin.permissions": "",
  "open-plugin-components": [
    2,
    0,
    9
  ],
  "plugin.website": "https://github.com/SirDank/dank.chatroom-plugin"
}